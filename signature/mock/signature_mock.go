// Code generated by MockGen. DO NOT EDIT.
// Source: signature/signature.go

// Package mock_signature is a generated GoMock package.
package mock_signature

import (
	context "context"
	reflect "reflect"

	signature "github.com/go-seidon/provider/signature"
	gomock "github.com/golang/mock/gomock"
)

// MockSignature is a mock of Signature interface.
type MockSignature struct {
	ctrl     *gomock.Controller
	recorder *MockSignatureMockRecorder
}

// MockSignatureMockRecorder is the mock recorder for MockSignature.
type MockSignatureMockRecorder struct {
	mock *MockSignature
}

// NewMockSignature creates a new mock instance.
func NewMockSignature(ctrl *gomock.Controller) *MockSignature {
	mock := &MockSignature{ctrl: ctrl}
	mock.recorder = &MockSignatureMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSignature) EXPECT() *MockSignatureMockRecorder {
	return m.recorder
}

// CreateSignature mocks base method.
func (m *MockSignature) CreateSignature(ctx context.Context, p signature.CreateSignatureParam) (*signature.CreateSignatureResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSignature", ctx, p)
	ret0, _ := ret[0].(*signature.CreateSignatureResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSignature indicates an expected call of CreateSignature.
func (mr *MockSignatureMockRecorder) CreateSignature(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSignature", reflect.TypeOf((*MockSignature)(nil).CreateSignature), ctx, p)
}

// VerifySignature mocks base method.
func (m *MockSignature) VerifySignature(ctx context.Context, p signature.VerifySignatureParam) (*signature.VerifySignatureResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifySignature", ctx, p)
	ret0, _ := ret[0].(*signature.VerifySignatureResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifySignature indicates an expected call of VerifySignature.
func (mr *MockSignatureMockRecorder) VerifySignature(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifySignature", reflect.TypeOf((*MockSignature)(nil).VerifySignature), ctx, p)
}
